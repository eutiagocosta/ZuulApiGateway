buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "se.transmode.gradle:gradle-docker:1.2"
		classpath('io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'docker'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

jar {
	baseName = 'app'
	version = '0.0.1-SNAPSHOT'
	archiveName = 'app.jar'
}

ext {
	springCloudVersion = 'Dalston.SR2'
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-zuul')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
	//compile('org.springframework.cloud:spring-cloud-starter-config')
	compile('org.springframework.cloud:spring-cloud-starter-bus-amqp')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	
	compile files('./libs/decrypt.jar')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

task buildDocker(type: Docker, dependsOn: build) {
	push = false

	if (project.hasProperty('tag'))
		tag = project.getAt("tag")
	else
		tag = 'beblue/app'

	applicationName = jar.baseName
	if (project.hasProperty('dockerfile'))
		dockerfile = file(project.getAt("dockerfile"))
	else
		dockerfile = file('docker/dev/Dockerfile')

	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}
